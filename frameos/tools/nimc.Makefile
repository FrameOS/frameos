# This Makefile is used for compiling C sources generated by Nim
CC ?= gcc

SOURCES := $(shell ls -S *.c)
OBJECTS = $(SOURCES:.c=.o)
TOTAL = $(words $(SOURCES))
EXECUTABLE = frameos
LIBS = -pthread -lm -lm -lrt -lcrypto -lssl -llgpio quickjs/libquickjs.a -lm -ldl
CFLAGS = -w -fmax-errors=3 -pthread -O3 -fno-strict-aliasing -fno-ident -fno-math-errno

all: $(EXECUTABLE)

$(EXECUTABLE): $(OBJECTS)
	@echo "Linking frameos"
	@$(CC) -o $(EXECUTABLE) $(OBJECTS) $(LIBS)

clean:
	rm -f *.o $(EXECUTABLE)

pre-build:
	@mkdir -p ../cache
	@echo "Compiling on device, largest files first. This might take minutes on the first run."

$(OBJECTS): pre-build

%.o: %.c
	@if [ ! -e $@ ]; then \
		md5sum=$$(md5sum $< | awk '{print $$1}'); \
		file=$$(echo '$<' | sed 's/@s/\//g' | sed 's/@m//g' | sed 's/.*nimble\/pkgs2\/\(.*\)/\1/' | sed 's/.*\/\(nim\/lib\/.*\)/\1/'); \
		cache_obj=../cache/$$md5sum.o; \
		if [ -f "$$cache_obj" ]; then \
			ln -s "$$cache_obj" $@; \
		else \
			$(CC) -c $(CFLAGS) $< -o $@; \
			cp $@ "$$cache_obj"; \
			echo "[$$(ls *.o | wc -l)/$(TOTAL)] $$file"; \
		fi; \
	fi

.PHONY: all clean pre-build

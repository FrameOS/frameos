# This file is autogenerated.
# To add a new driver, make an entry in backend/app/models/drivers.py

import pixie
# import inkyPython/inkyPython as inkyDriver
# import frameBuffer/frameBuffer as frameBufferDriver
# import waveshare/waveshare as waveshareDriver

import frameos/types

# var inkyDriverInstance: inkyDriver.Driver
# var frameBufferDriverInstance: frameBufferDriver.Driver
# var waveshareDriverInstance: waveshareDriver.Driver

# Called before the runner is created
proc init*(frameOS: FrameOS) =
  # inkyDriverInstance = inkyDriver.init(frameOS)
  # frameBufferDriverInstance = frameBufferDriver.init(frameOS)
  # waveshareDriverInstance = waveshareDriver.init(frameOS)
  discard

# Called after the frame's image is rendered
proc render*(image: Image) =
  # inkyDriverInstance.render(image)
  # frameBufferDriverInstance.render(image)
  # waveshareDriverInstance.render(image)
  discard

# Convert the rendered pixels to a PNG image. For accurate colors on the web.
proc toPng*(rotate: int): string =
  # return inkyDriverInstance.toPng(rotate)
  # return frameBufferDriverInstance.toPng(rotate)
  # return waveshareDriverInstance.toPng(rotate)
  discard

# Turn on the device, if supported
proc turnOn*() =
  # frameBufferDriverInstance.turnOn()
  discard

# Turn off the device, if supported
proc turnOff*() =
  # frameBufferDriverInstance.turnOff()
  discard
